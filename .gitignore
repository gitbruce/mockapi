# Logs
# 日志文件通常包含环境特定的信息或大量的调试输出，不应提交
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (Node.js report)
# Node.js 在某些崩溃或异常情况下生成的诊断报告
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
# 运行时产生的数据，如进程ID文件、随机种子文件等
pids
*.pid
*.seed
*.pid.lock

# Dependency directories
# 项目依赖通常通过包管理器（npm, yarn, pnpm）安装，不应直接提交
# 这些依赖可以通过 package.json 和 lock 文件在任何环境中重新安装
node_modules/
jspm_packages/
web_modules/ # Snowpack

# Build output
# 编译或构建过程中产生的输出文件或目录
# 例如，TypeScript 编译后的 JavaScript 文件，或者打包工具（Webpack, Parcel, Rollup等）的输出
dist/
build/
out/
.next/ # Next.js
.nuxt/ # Nuxt.js
.svelte-kit/ # SvelteKit
*.tsbuildinfo # TypeScript incremental build information

# Compiled binary addons (https://nodejs.org/api/addons.html)
# Node.js C++ 插件编译后的二进制文件
build/Release
build/Debug
*.node

# Cache
#各种工具产生的缓存文件，用于提高后续操作的速度
.npm/
.eslintcache
.stylelintcache
.cache/
.parcel-cache/ # Parcel
.rpt2_cache/ # rollup-plugin-typescript2
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Test reports and coverage
# 测试运行后生成的报告和覆盖率数据
coverage/
.nyc_output/
junit.xml
test-results-*.xml
*.lcov

# Environment variables
# 包含敏感信息（如API密钥、数据库密码）或环境特定配置的文件
# 通常会有一个 .env.example 文件作为模板提交到仓库
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*.local

# OS generated files
# 操作系统自动生成的文件
.DS_Store # macOS
Thumbs.db # Windows
ehthumbs.db # Windows
Desktop.ini # Windows

# IDE and editor specific files
# 不同IDE和编辑器的配置文件和工作区文件
.idea/ # JetBrains IDEs (WebStorm, IntelliJ IDEA, etc.)
.vscode/ # Visual Studio Code (除非你想共享特定的调试配置或推荐插件，但通常 .vscode/settings.json 等应忽略)
# !.vscode/launch.json # 如果需要共享启动配置，可以取消这一行的注释
# !.vscode/tasks.json  # 如果需要共享任务配置，可以取消这一行的注释
# !.vscode/extensions.json # 如果需要推荐插件，可以取消这一行的注释
*.suo
*.ntvs*
*.njsproj
*.sln
*.swp # Vim swap files
*~ # Backup files

# Packed files
# npm pack 命令的输出
*.tgz

# Optional REPL history
.node_repl_history

# Other common ignores
# 一些其他项目中可能出现的不需要提交的文件
*.pem # Private keys
*.key

# If you're using a specific framework or tool, it might have its own recommendations.
# For example, for Create React App, you might not need to ignore 'build/' if you deploy from it,
# but typically build artifacts are not versioned.

# You can add project specific files below this line
# 在此行下方添加你项目特定的忽略规则